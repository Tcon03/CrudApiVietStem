<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries >
        <ResourceDictionary Source="/Styles/Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>


    <!--Btn Search Style-->

    <Style TargetType="{x:Type Button}" x:Key="btnSearch">
        <Setter Property="Background" 
                Value="#FF7A59"/>
        <Setter Property="BorderBrush" 
                Value="Transparent"/>
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Foreground"
                Value="White"/>
        <Setter Property="FontWeight"
                Value="DemiBold"/>
        <Setter Property="FontFamily"
                Value="Font\Nexa.ttf"/>
        <Setter Property="MinHeight"
                Value="40"/>
        <Setter Property="MinWidth"
                Value="150"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                             CornerRadius="7">
                        <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#0284C7"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#009C86"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <!--Btn Clear Style-->
    <Style TargetType="Button" 
           BasedOn="{StaticResource btnSearch}" 
           x:Key="btnClear">
        <Setter Property="Background" 
                Value="#D1D5DB"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E53935"/>
                <!-- Hover -->
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#D32F2F"/>
                <!-- Pressed -->
            </Trigger>

        </Style.Triggers>
    </Style>





    <!--Button Add Information-->
    <Style TargetType="{x:Type Button}" x:Key="btnAdd" >
        <Setter Property="Width" 
                Value="180"/>
        <Setter Property="Cursor" 
                Value="Hand"/>
        <Setter Property="Height" 
                Value="45"/>
        <Setter Property="Margin" 
                Value="5"/>
        <Setter Property="Background" 
                Value="{DynamicResource GeminiActionButtonBrush}"/>
        <Setter Property="Foreground" 
                Value="White"/>
        <Setter Property="FontFamily"
                Value="/Font/#Roboto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            CornerRadius="10">
                        <ContentPresenter
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" 
                        Value="#8D75FF"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" 
                        Value="#674DCC"/>
            </Trigger>
        </Style.Triggers>
    </Style>





    <!--BaseButton for Form Add-->
    <Style TargetType="Button" x:Key="BaseButton">
        <Setter Property="MinWidth"
                Value="150"/>
        <Setter Property="Margin"
                Value="10"/>
        <Setter Property="Cursor"
                Value="Hand"/>
        <Setter Property="FontWeight" 
                Value="Medium"/>
        <Setter Property="FontSize"
                Value="15"/>
        <Setter Property="Height" 
                Value="45"/>
        <Setter Property="Background"
                Value="Black"/>
        <Setter Property="Foreground"
                Value="White"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                             CornerRadius="8">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" 
                        Value="#E53935"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" 
                        Value="#D32F2F"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <!--Bnt Ok -->
    <Style TargetType="Button" x:Key="btnOk" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Background" 
             Value="{DynamicResource GenerateButtonAdd}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" 
                        Value="#00BFA5"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" 
                        Value="{DynamicResource GenerateButtonAdd}"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <!--Btn Save-->
    <Style TargetType="Button" x:Key="btnSave" BasedOn="{StaticResource btnOk}">
        <Setter Property="Background" 
                Value="{DynamicResource ColorButtonPurpule}"/>
    </Style>
    <!--Btn Cancel-->
    <Style TargetType="Button" BasedOn="{StaticResource BaseButton}" x:Key="btnCancel">
        <Setter Property="Foreground" 
                Value="White"/>
        <Setter Property="Background" 
                Value="#FF4D4F"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" 
                     Value="True">
                <Setter Property="Background" 
                        Value="#E53935"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" 
                        Value="#D32F2F"/>
            </Trigger>

        </Style.Triggers>
    </Style>


    <!--Button NextPage on datagrid -->
    <Style x:Key="btnIconNext" TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="#433878"/>
        <Setter Property="BorderBrush"
                Value="Transparent"/>
        <Setter Property="Foreground"
                Value="Gray"/>
        <Setter Property="Height"
                Value="30"/>
        <Setter Property="Width" 
                Value="30"/>
        <Setter Property="Margin"
                Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Pink"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#AD49E1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--btn actions-->
    <!--<Style TargetType="Button" x:Key="btnDelete" BasedOn="{StaticResource btnIconNext}">
        <Setter Property="Background" Value="#CC2B52"/>
    </Style>-->


    <!--BTN CLOSE AddInfor-->
    <Style x:Key="btnClose" TargetType="Button">
        <Setter Property="HorizontalAlignment" 
                Value="Right" />
        <Setter Property="Margin" 
                Value="15"/>
        <Setter Property="Height"
                Value="30"/>
        <Setter Property="Width"
                Value="30"/>
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource CloseColor}"/>

            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource CloseColor}"/>

            </Trigger>
        </Style.Triggers>
    </Style>








    <!--TextBox UserName and Password-->

    <Style x:Key="tapButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MinWidth" Value="70" />
        <Setter Property="Height" Value="45" />
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontFamily" Value="/Font/Roboto.ttf#Roboto Black"/>
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border         CornerRadius="8"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.8"/>
                <Setter Property="Foreground" Value="Black" />
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#7b5cd6" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="btnSideBar"  TargetType="Button" >
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="MinHeight" Value="45"/>
        <Setter Property="Margin" Value="0 5 0 0"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            CornerRadius="10">
                        <ContentPresenter
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- Khi chuột ở trên nút (IsMouseOver = True) -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorMouse}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource colorPress}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>